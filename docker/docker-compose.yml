version: '3'
services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./../app/pcheliki.monolit:/var/www
    ports:
      - "8078:80"
    container_name: nginx_con
    depends_on: [php]

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    volumes:
      - ./../app/pcheliki.monolit:/var/www
    container_name: php_con

  #Tyt baza
  postgres:
    image: postgres:14.8-alpine3.18
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./logs/postgres:/var/log/postgres
      - ./habrdb-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    container_name: postgres_con
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "threeh1@vk.com"
      PGADMIN_DEFAULT_PASSWORD: "asd890jkl"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

#  npm:
#    image: node:18.13.0
#    working_dir: /var/www/html
#    entrypoint: [ "npm" ]
#    container_name: npm_con
#    volumes:
#      - ./www:/var/www/html
