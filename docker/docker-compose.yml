version: '3'
services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./../app/pcheliki.monolit:/var/www
    ports:
      - "8078:80"
    container_name: nginx_con
    depends_on: [php]

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    volumes:
      - ./../app/pcheliki.monolit:/var/www
    container_name: php_con

  #Tyt baza
  postgres:
    image: postgres:14.8-alpine3.18
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./logs/postgres:/var/log/postgres
      - ./habrdb-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    container_name: postgres_con
    networks:
      - postgres

  redis:
    container_name: redis_con
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/root/redis
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DATABASES: ${REDIS_DATABASES}

  npm:
    image: node:latest
    volumes:
      - ./../app/pcheliki.monolit:/var/www/html
    working_dir: /var/www/html
    container_name: npm_con
    command: tail -f /dev/null

  # .NET + Grpc
  dotnet:
    image: mcr.microsoft.com/dotnet/sdk:5.0
    volumes:
      - ./../app/pcheliki.chart:/app
    container_name: dotnet_con
    ports:
      - '5051:5000'
    tty: true
    working_dir: /app

networks:
  postgres:
    driver: bridge